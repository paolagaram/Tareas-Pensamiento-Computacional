# -*- coding: utf-8 -*-
"""Tarea 5: Programas que utilizan Matrices

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-nDt9P5d6nUxClkzy1tWCY74xTZiObvR

Ejercicio 1
"""

def diagonal_principal(matriz: list[list[int]]): #matriz cuadrada como entrada, es una lista de listas de números enteros
    vector_diagonal = [] #lista vacía donde guarda la diagonal
    for i in range(len(matriz)): #Itera sobre cada índice de la matriz
        vector_diagonal.append(matriz[i][i]) #añade los elementos de la diagonal principal de la matriz
    return vector_diagonal

def leer(ren: int,col: int): #La entrada es un número entero de renglones y un número entero de columnas
  matriz = []
  for i in range(ren): #Itera sobre las filas (recorre)
    fila = []
    for j in range(col): #Itera sobre las columnas
      valor = int(input(f"Ingrese el valor para la posición [{i}][{j}]: ")) #posición del renglón y después la fila
      fila.append(valor) #agrega cada valor a la fila
    matriz.append(fila) #agrega la lista de fila a la matriz
  print("\nMatriz ingresada:")
  for fila in matriz:
      print(fila)

  return matriz #Devuelve la matriz completa

def main():
  ren = int(input("Ingrese el número de renglones: "))
  col = int(input("Ingrese el número de columnas: "))
  if ren != col: #verifica si el número de renglones es igual al número de columnas
        print("Error: la matriz no es cuadrada. No se puede obtener la diagonal principal.")
  else:
    matriz = leer(ren, col) #llama a la función que lee la matriz
    diagonal = diagonal_principal(matriz) #calcula la diagonal
    print("\nLa diagonal principal es:", diagonal)

if __name__ == "__main__":
  main()

"""Ejercicio 2"""

def centroMatriz(matriz: list[list[int]]):
  matrizSalida = []
  for i in range(1,len(matriz) - 1): #Itera sobre cada renglón de la matriz, excluyendo los bordes (es decir, desde el segundo renglón hasta el penúltimo).
      vector = []
      for j in range(1, len(matriz[i]) - 1): #Itera sobre cada columna de la matriz, excluyendo también los bordes (es decir, desde la segunda columna hasta la penúltima).
        vector.append(matriz[i][j])#Añade a vector los elementos correspondientes al "centro" de la matriz original.
      matrizSalida.append(vector)
  return matrizSalida #Añade vector a matrizSalida

def leer(ren, col):#Toma como entrada el número de renglones (ren) y el número de columnas (col) de la matriz.
    matriz = [] #Crea una lista vacía
#bucles anidados para llenar la matriz:
    for i in range(ren): #itera sobre los renglones.
        fila = []
        for j in range(col): #itera sobre las columnas y solicita al usuario que ingrese un valor para cada posición de la matriz.
            valor = int(input(f"Ingrese el valor para la posición [{i}][{j}]: "))
            fila.append(valor)
        matriz.append(fila)


    print("\nMatriz ingresada:")
    for fila in matriz:
        print(fila)

    return matriz

def main():
    ren = int(input("Ingrese el número de renglones: "))
    col = int(input("Ingrese el número de columnas: "))

    matriz = leer(ren, col) #Manda a llamar la función para obtener la matriz

    matriz_centro = centroMatriz(matriz) #Llama a la función para obtener el "centro" de la matriz

    print("\nCentro de la matriz:")
    if matriz_centro:
        for fila in matriz_centro:
            print(fila)
    else:
        print("La matriz no tiene centro (es demasiado pequeña).")

if __name__ == "__main__":
    main()

"""Ejercicio 3"""

def leer(ren: int,col: int): #int es el formato esperado
  matriz = []
  #Bucles anidados para llenar la matriz
  for i in range(ren): #Recorre los renglones (filas)
        fila = []
        for j in range(col): # Recorre las columnas dentro del renglón actual
            valor = int(input(f"Ingrese el valor para la posición [{i}][{j}]: "))
            fila.append(valor) #Agrega cada valor a la fila actual
        matriz.append(fila) #Agrega la fila completa a la matriz

  print("\nMatriz ingresada:")
  for fila in matriz:# Imprime cada fila por separado (formato de lista)
    print(fila)
  return matriz #Devuelve la matriz construida

def cambiaRenglones(matriz: list[list[int]]): #Pide al usuario que ingrese dos números de renglones que desea intercambiar (restando 1 a cada entrada para ajustarlo a índices de lista basados en cero).
  r1 = int(input("\nIngrese el número del primer renglón a intercambiar: ")) - 1
  r2 = int(input("Ingrese el número del segundo renglón a intercambiar: ")) - 1
  #Itera sobre cada columna de la matriz y realiza el intercambio correspondiente entre los elementos de los dos renglones especificados.
  for j in range(len(matriz[0])): #Recorre las columnas
      matriz[r1][j], matriz[r2][j] = matriz[r2][j], matriz[r1][j] #Intercambia los renglones

  return matriz #retorna la matriz con los renglones intercambiados.

def main():

    ren = int(input("Ingrese el número de renglones: "))
    col = int(input("Ingrese el número de columnas: "))

    matriz = leer(ren, col) #Crea la matriz

    matriz = cambiaRenglones(matriz) #intercambia renglones

    print("\nMatriz con los renglones intercambiados:") #Resultado final
    for fila in matriz:
        print(fila)

if __name__ == "__main__":
    main()